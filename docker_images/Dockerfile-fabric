FROM hyperledger/fabric-orderer:amd64-1.3.0

RUN apt-get update \
    && apt -y install python-software-properties debconf-utils git-all build-essential python-pip python-dev curl libc6-dev-i386 autoconf software-properties-common zip unzip \
    && apt-get clean all

RUN curl -s "https://get.sdkman.io" | bash \
    && bash -c " source /root/.sdkman/bin/sdkman-init.sh && sdk install java 8.0.272-zulu && sdk install ant && sdk flush archives"

RUN curl -O https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz \
    && tar -xvf go1.10.3.linux-amd64.tar.gz \
    && mv go /usr/local \
    && rm go1.10.3.linux-amd64.tar.gz \
    && mkdir -p /go

ENV PATH=$PATH:/usr/local/go/bin
ENV GOPATH=/go/

RUN echo $PATH
RUN echo $GOPATH
RUN /usr/local/go/bin/go version
RUN go version
RUN mkdir -p /go/src/github.com/hyperledger
WORKDIR /go/src/github.com/hyperledger/
RUN git clone https://github.com/danielporto/fabric.git
WORKDIR /go/src/github.com/hyperledger/fabric/

RUN pip install --upgrade pip 

RUN git checkout release-1.3

RUN devenv/setupUbuntuOnPPC64le.sh \
# hack to make docker-compose work
    && pip uninstall -y docker-compose \
    && curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose

RUN make configtxgen orderer peer

WORKDIR /go/src/github.com/hyperledger/fabric/orderer/sample_clients/broadcast_msg/
RUN go build
WORKDIR /go/src/github.com/hyperledger/fabric/orderer/sample_clients/broadcast_config/
RUN go build
WORKDIR /go/src/github.com/hyperledger/fabric/orderer/sample_clients/deliver_stdout/
RUN go build

WORKDIR /go/src/github.com/hyperledger/fabric/

ENV FABRIC_CFG_PATH=/go/src/github.com/hyperledger/fabric/sampleconfig

COPY  temp/fabric_conf/* /go/src/github.com/hyperledger/fabric/sampleconfig/
ARG SYS_CHAN_NAME
RUN .build/bin/configtxgen -profile SampleSingleMSPBFTsmart -channelID $SYS_CHAN_NAME -outputBlock ./genesisblock

RUN cp /go/src/github.com/hyperledger/fabric/.build/bin/orderer /usr/local/bin/orderer
RUN cp /go/src/github.com/hyperledger/fabric/.build/bin/configtxgen /usr/local/bin/configtxgen

WORKDIR /

# ENV JAVA_HOME=/usr/lib/jvm/java-8-oracle/
# hack to set new java home
ENV JAVA_HOME=/root/.sdkman/candidates/java/current

RUN git clone https://github.com/mcfunley/juds.git
WORKDIR /juds
RUN ./autoconf.sh
RUN ./configure

RUN make
RUN make install

WORKDIR /

ENTRYPOINT ["/bin/bash"]

